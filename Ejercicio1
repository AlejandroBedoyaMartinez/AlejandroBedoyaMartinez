import Text.Printf
listFunc :: [(String, Double -> Double)]
listFunc = [ ("seno", sin)
            , ("coseno", cos)
            , ("tangente", tan)
            , ("exponencial", exp)
            , ("logaritmo neperiano", log)
            ]
calcu :: IO ()
calcu = do
    putStrLn "Bienvenido a la calcu científica"
    putStrLn "ListFunc disponibles:"
    mapM_ (\(nombre, _) -> putStrLn nombre) listFunc
    putStrLn "Ingrese el nombre de la función:"
    funcionStr <- getLine
    let maybeFuncion = lookup funcionStr listFunc
    case maybeFuncion of
        Nothing -> putStrLn "Función no encontrada"
        Just funcion -> do
            putStrLn "Ingrese el valor:"
            valorStr <- getLine
            let valor = read valorStr :: Double
            putStrLn "Tabla de resultados:"
            putStrLn "Valor\tResultado"
            mapM_ (\x -> printf "%.2f\t%.2f\n" x (funcion x)) [1..valor]
main :: IO ()
main = calcu


